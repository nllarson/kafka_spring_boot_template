spring.application.name=demo

# Kafka
spring.kafka.bootstrap-servers={cluster_boostrap_url}
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.oauthbearer.token.endpoint.url={token_endpoint_url}
spring.kafka.properties.sasl.login.callback.handler.class=org.apache.kafka.common.security.oauthbearer.secured.OAuthBearerLoginCallbackHandler
spring.kafka.properties.sasl.mechanism=OAUTHBEARER
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
    clientId='{client_id}' \
    clientSecret='{client_secret}' \
    extension_logicalCluster='{cluster_id}' \
    extension_identityPoolId='{id_pool_id' \
    scope='{scope}';

spring.kafka.properties.schema.registry.url={schema_registry_url}

################################################################
## SCHEMA-REGISTRY -- API KEY & SECRET AUTH
################################################################
#spring.kafka.properties.basic.auth.credentials.source=USER_INFO
#spring.kafka.properties.schema.registry.basic.auth.user.info={sr_api_key}:{sr_api_secret}

################################################################
## SCHEMA-REGISTRY -- OAUTH ## This isn't working at the moment.
################################################################
spring.kafka.properties.bearer.auth.credentials.source=OAUTHBEARER
#spring.kafka.properties.bearer.auth.credentials.source=SASL_OAUTHBEARER_INHERIT
spring.kafka.properties.bearer.auth.logical.cluster={cluster_id}
spring.kafka.properties.bearer.auth.identity.pool.id={id_pool_id}
spring.kafka.properties.bearer.auth.issuer.endpoint.url={token_endpoint_url}
spring.kafka.properties.bearer.auth.client.id={client_id}
spring.kafka.properties.bearer.auth.client.secret={client_secret}
spring.kafka.properties.bearer.auth.scope={scope}

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.IntegerSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
